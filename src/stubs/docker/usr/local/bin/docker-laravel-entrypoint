#!/usr/bin/env bash

set -e
cd /var/www/laravel

role=${CONTAINER_ROLE:-app}
if [[ -z "$APP_ENV" ]]; then
    APP_ENV=local
    echo -e "\e[33mENV undefined: APP_ENV, use default $APP_ENV\e[0m"
    echo "APP_ENV=$APP_ENV" >> .env
fi

if [[ "$APP_ENV" = "local" ]]; then
    cp /usr/local/etc/php/php.ini-development /usr/local/etc/php/php.ini
    if [[ -z "$APP_KEY" ]]; then
        APP_KEY=$(php artisan key:generate --show)
        echo -e "\e[33mENV undefined: APP_KEY, generate $APP_KEY\e[0m"
        echo "APP_KEY=$APP_KEY" >> .env
    fi
else
    echo "Caching configuration..."
    php artisan config:cache
    php artisan route:cache
fi


if [[ -z "$DB_CONNECTION" ]]; then
    DB_CONNECTION=sqlite
    echo -e "\e[33mENV undefined: DB_CONNECTION, use default $DB_CONNECTION\e[0m"
    echo "DB_CONNECTION=$DB_CONNECTION" >> .env
fi

chown www-data:www-data bootstrap/cache
chown -R www-data:www-data storage/

if [[ "$DB_CONNECTION" = "sqlite" ]]; then
    touch database/database.sqlite
    chown -R www-data:www-data database/
fi
php artisan migrate --force

if [[ "$role" = "app" ]]; then

    exec apache2-foreground

elif [[ "$role" = "scheduler" ]]; then

    echo "start cron"
    crontab /var/spool/cron/crontabs/root
    cron -f

elif [[ "$role" = "queue" ]]; then

    echo "Running the queue..."
    php artisan queue:work --queue={default} --verbose --tries=3 --timeout=90

else
    echo "Could not match the container role: $role"
    exit 1
fi
